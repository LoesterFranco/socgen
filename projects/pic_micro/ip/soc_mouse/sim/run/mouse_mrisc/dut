

// Instantiate one CPU to be tested.
soc_mouse_mrisc
#(
.ROM_WORDS ( ROM_WORDS ), 
.ROM_ADDR  ( ROM_ADDR  ),  
.ROM_WIDTH ( ROM_WIDTH ), 
.ROM_FILE  ( ROM_FILE  )
)
dut(
   .clk		( clk         ),
   .reset	( reset       ),

   .ps2_data_pad_in ( ps2_data_pad_in ),
   .ps2_clk_pad_in  ( ps2_clk_pad_in  ),

   .ps2_data_pad_oe ( ps2_data_pad_oe ),
   .ps2_clk_pad_oe  ( ps2_clk_pad_oe  ),


   .portaout    ( portaout    ),
   .portbout    ( portbout    ),
   .portcout    ( portcout    ),


   .y_pos       ( y_pos       ),
   .x_pos       ( x_pos       ),
   .new_packet  ( new_packet  ),
   .ms_mid      ( ms_mid      ), 
   .ms_right    ( ms_right    ),  
   .ms_left     ( ms_left     ),  



   .txd_pad_out ( txd_pad_out ),
   .rxd_pad_in  ( rxd_pad_in  ),
   .cts_pad_in  ( cts_pad_in  ),
   .rts_pad_out ( rts_pad_out )  

   );



assign    rxd_pad_in  =          txd_pad_out;
assign    cts_pad_in  =          rts_pad_out;  

wire         device_rx_read;
wire [7:0]   device_rx_data;
wire         device_rx_parity;
wire         ps2_data;
wire         ps2_clk;





iobuftri
data_tri_buf
  (
   .i   ( 1'b0        ),
   .oe  ( ps2_data_pad_oe ),
   .o   ( ps2_data_pad_in ),
   .pad ( ps2_data    )
   );


iobuftri
clk_tri_buf
  (
   .i   ( 1'b0       ),
   .oe  ( ps2_clk_pad_oe ),
   .o   ( ps2_clk_pad_in ),
   .pad ( ps2_clk    )
   );



pullup ua0(ps2_clk);
pullup ua1(ps2_data);


ps2_model 
#(.CLKCNT(10'h177))
ps2_model
(
   .clk                    ( clk              ),
   .reset                  ( reset            ), 
   .ps2_clk                ( ps2_clk          ),
   .ps2_data               ( ps2_data         )

);
